name: 'Miqa Test Kickoff'
description: 'Kick off jobs on Miqa and status checks in GitHub'
inputs:
  INSTALLATION_ID:
    description: 'App Installation ID for the miqa-status-check Github App'
    required: true
  GITHUB_TOKEN:
    description: 'GitHub token'
    required: true
  CHECK_NAME:
    description: 'Name to display in checks status'
    default: 'Triggered Miqa Test'
  SHA:
    description: 'github.sha'
  REPOSITORY:
    description: 'github.repository'
  MIQA_GITHUB_APP:
    description: 'Base URL for Miqa GitHub App'
    required: false
    default: 'http://miqa-github.herokuapp.com'
outputs:
  CHECK_RUN_ID:
    description: "Check run ID to pass to Miqa trigger"
    value: ${{ steps.return_all_info.outputs.CHECK_RUN_ID }}
runs:
  using: "composite"
  steps:
      - name: Fetch commit SHA
        id: fetch_sha
        uses: octokit/request-action@v2.1.9
        with:
          route: GET /repos/{repo}/commits/{sha}
        env:
          GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
          INPUT_REPO: ${{ inputs.REPOSITORY }}
          INPUT_SHA: ${{ inputs.SHA }}
      - name: Save commit SHA
        shell: bash
        id: get_sha
        run: echo "parent_sha=${{ toJSON(fromJSON(steps.fetch_sha.outputs.data).parents[1].sha) }}" >> "$GITHUB_OUTPUT"
      - if: ${{ github.event_name == 'pull_request' && steps.get_sha.outputs.parent_sha != 'null' }}
        shell: bash
        run: |
          echo "NEW_SHA=${{steps.get_sha.outputs.parent_sha}}" >> $GITHUB_ENV
      - if: ${{ github.event_name != 'pull_request' || steps.get_sha.outputs.parent_sha == 'null' }} 
        shell: bash
        run: |
          echo "NEW_SHA=${{ inputs.SHA }}" >> $GITHUB_ENV
      - name: HTTP Request - Create Check Run
        uses: fjogeleit/http-request-action@v1.14.0
        id: trigger_1
        with:
          url: '${{inputs.MIQA_GITHUB_APP}}/create_check_manual'
          method: 'POST'
          timeout: 30000
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"installation_id":"${{inputs.INSTALLATION_ID}}","repository_full_name":"${{ inputs.REPOSITORY }}", "head_sha":"${{ env.NEW_SHA  }}", "check_name":"${{inputs.CHECK_NAME}}", "gha_version":"1.1.3"}'
      - name: Set Check Run ID
        shell: bash
        id: set_check_run
        run: |
          echo  "CHECK_RUN_ID=${{ fromJSON(fromJSON(toJSON(steps.trigger_1.outputs.response))).id }}" >> $GITHUB_ENV
      - name: Return all info
        shell: bash
        id: return_all_info
        run: |
          echo "CHECK_RUN_ID=${{ env.CHECK_RUN_ID }}" >> "$GITHUB_OUTPUT"
